From 667007fa4e370e7fbac5d9e6789b119f9456cf75 Mon Sep 17 00:00:00 2001
From: vaxerski <43317083+vaxerski@users.noreply.github.com>
Date: Tue, 10 Oct 2023 14:45:54 +0100
Subject: [PATCH 1/2] core: kill process if threads are in a deadlock

---
 src/core/PortalManager.cpp | 8 ++++++++
 src/core/PortalManager.hpp | 5 +++--
 2 files changed, 11 insertions(+), 2 deletions(-)

diff --git a/src/core/PortalManager.cpp b/src/core/PortalManager.cpp
index 912f859..30e0943 100644
--- a/src/core/PortalManager.cpp
+++ b/src/core/PortalManager.cpp
@@ -11,6 +11,7 @@
 #include <sys/poll.h>
 #include <sys/mman.h>
 #include <fcntl.h>
+#include <unistd.h>
 
 #include <thread>
 
@@ -242,6 +243,8 @@ void CPortalManager::onGlobalRemoved(void* data, struct wl_registry* registry, u
 }
 
 void CPortalManager::init() {
+    m_iPID = getpid();
+
     try {
         m_pConnection = sdbus::createDefaultBusConnection("org.freedesktop.impl.portal.desktop.hyprland");
     } catch (std::exception& e) {
@@ -517,6 +520,11 @@ void CPortalManager::addTimer(const CTimer& timer) {
 void CPortalManager::terminate() {
     m_bTerminate = true;
 
+    // if we don't exit in 5s, we'll kill by force. Nuclear option. PIDs are not reused in linux until a wrap-around,
+    // and I doubt anyone will make 4.2M PIDs within 5s.
+    if (fork() == 0)
+        execl("/bin/sh", "/bin/sh", "-c", std::format("sleep 5 && kill -9 {}", m_iPID).c_str());
+
     {
         m_sEventLoopInternals.shouldProcess = true;
         m_sEventLoopInternals.loopSignal.notify_all();
diff --git a/src/core/PortalManager.hpp b/src/core/PortalManager.hpp
index 98359a4..1813786 100644
--- a/src/core/PortalManager.hpp
+++ b/src/core/PortalManager.hpp
@@ -75,9 +75,10 @@ class CPortalManager {
     void terminate();
 
   private:
-    void startEventLoop();
+    void  startEventLoop();
 
-    bool m_bTerminate = false;
+    bool  m_bTerminate = false;
+    pid_t m_iPID       = 0;
 
     struct {
         std::condition_variable loopSignal;
-- 
2.42.0


From ec2e207740fd818181df356d991573380ee3d0f7 Mon Sep 17 00:00:00 2001
From: vaxerski <43317083+vaxerski@users.noreply.github.com>
Date: Tue, 10 Oct 2023 14:47:03 +0100
Subject: [PATCH 2/2] core: fix missing sentinel in execl

---
 src/core/PortalManager.cpp | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/src/core/PortalManager.cpp b/src/core/PortalManager.cpp
index 30e0943..aeb6e0f 100644
--- a/src/core/PortalManager.cpp
+++ b/src/core/PortalManager.cpp
@@ -523,7 +523,7 @@ void CPortalManager::terminate() {
     // if we don't exit in 5s, we'll kill by force. Nuclear option. PIDs are not reused in linux until a wrap-around,
     // and I doubt anyone will make 4.2M PIDs within 5s.
     if (fork() == 0)
-        execl("/bin/sh", "/bin/sh", "-c", std::format("sleep 5 && kill -9 {}", m_iPID).c_str());
+        execl("/bin/sh", "/bin/sh", "-c", std::format("sleep 5 && kill -9 {}", m_iPID).c_str(), nullptr);
 
     {
         m_sEventLoopInternals.shouldProcess = true;
-- 
2.42.0
